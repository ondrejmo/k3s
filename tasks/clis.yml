---

- name: "clis/{{ item.name }} - check version file"
  ansible.builtin.stat:
    path: "/etc/rancher/k3s/clis/{{ item.name }}.version.txt"
  register: cli_version_file

- name: "clis/{{ item.name }} - slurp old version"
  ansible.builtin.slurp:
    src: "/etc/rancher/k3s/clis/{{ item.name }}.version.txt"
  register: cli_old_version
  when: cli_version_file.stat.exists

- name: "clis/{{ item.name }} - create temporary directory"
  ansible.builtin.file:
    path: "/tmp/{{ item.name }}"
    state: directory
    mode: 0700
  when: (not cli_version_file.stat.exists) or (k3s_clis[item.name] is version(cli_old_version['content'] | b64decode | trim, ">"))

- name: "clis/{{ item.name }} - unpack archive"
  ansible.builtin.unarchive:
    src: "{{ item.url }}"
    dest: "/tmp/{{ item.name }}"
    remote_src: true
  when: (not cli_version_file.stat.exists) or (k3s_clis[item.name] is version(cli_old_version['content'] | b64decode | trim, ">"))

- name: "clis/{{ item.name }} - copy binary to $PATH"
  ansible.builtin.copy:
    src: "/tmp/{{ item.name }}/{{ item.file }}"
    dest: "/usr/local/bin/{{ item.name }}"
    mode: 0755
    owner: root
    group: root
    remote_src: true
  when: (not cli_version_file.stat.exists) or (k3s_clis[item.name] is version(cli_old_version['content'] | b64decode | trim, ">"))

- name: "clis/{{ item.name }} - remove temporary directory"
  ansible.builtin.file:
    path: "/tmp/{{ item.name }}"
    state: absent
  when: (not cli_version_file.stat.exists) or (k3s_clis[item.name] is version(cli_old_version['content'] | b64decode | trim, ">"))

- name: "clis/{{ item.name }} - get bash completion"
  ansible.builtin.command: "{{ item.name }} completion bash"
  register: bash_completion
  changed_when: false
  when: (not cli_version_file.stat.exists) or (k3s_clis[item.name] is version(cli_old_version['content'] | b64decode | trim, ">"))

- name: "clis/{{ item.name }} - write bash completion"
  ansible.builtin.copy:
    content: "{{ bash_completion.stdout }}"
    dest: "/etc/bash_completion.d/{{ item.name }}"
    mode: 0644
    owner: root
    group: root
  when: (not cli_version_file.stat.exists) or (k3s_clis[item.name] is version(cli_old_version['content'] | b64decode | trim, ">"))

- name: "clis/{{ item.name }} - write version file"
  ansible.builtin.copy:
    dest: "/etc/rancher/k3s/clis/{{ item.name }}.version.txt"
    content: "{{ k3s_clis[item.name] }}"
    mode: 0644
    owner: root
    group: root
  when: (not cli_version_file.stat.exists) or (k3s_clis[item.name] is version(cli_old_version['content'] | b64decode | trim, ">"))
