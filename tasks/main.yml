---

- name: mkdirs
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    mode: "0700"
    owner: root
    group: root
  loop:
    - /var/lib/rancher/k3s/server/logs
    - /var/lib/rancher/k3s/server/manifests
    - /var/lib/rancher/k3s/server/manifests/metrics-server
    - /var/lib/rancher/k3s/server/static/charts
    - /etc/rancher/k3s/clis
    - /etc/rancher/k3s

- name: check k3s is installed
  ansible.builtin.command: k3s --version
  register: k3s_installed
  failed_when: false
  changed_when: false

- name: run k3s-install.sh
  ansible.builtin.import_tasks: install.yml
  when: k3s_installed.rc != 0 or k3s_installed.stdout_lines[0].split(' ')[2].split('+')[0].replace('v', '') is version(k3s_components.k3s.split('+')[0], '<')

- name: add clis
  ansible.builtin.include_tasks: clis.yml
  loop:
    - name: cilium
      url: "https://github.com/cilium/cilium-cli/releases/download/v{{ k3s_clis.cilium }}/cilium-linux-amd64.tar.gz"
      file: cilium
    - name: helm
      url: "https://get.helm.sh/helm-v{{ k3s_clis.helm }}-linux-amd64.tar.gz"
      file: linux-amd64/helm
    - name: hubble
      url: "https://github.com/cilium/hubble/releases/download/v{{ k3s_clis.hubble }}/hubble-linux-amd64.tar.gz"
      file: hubble

- name: add additional configuration
  ansible.builtin.import_tasks: configuration.yml

- name: start k3s
  ansible.builtin.systemd:
    name: k3s{% if k3s_role == 'agent' %}-agent{% endif %}.service
    state: started
    enabled: true

# DISCLAIMER: it's not the same as https://kubernetes.io/docs/concepts/architecture/garbage-collection/#image-maximum-age-gc, because it does not reset with kubelet restart
- name: add k3s image prune cronjob
  ansible.builtin.cron:
    user: root
    name: k3s image prune
    job: /usr/local/bin/k3s crictl rmi --prune
    special_time: weekly
