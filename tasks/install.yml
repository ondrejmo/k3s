---

- name: download k3s-install.sh
  ansible.builtin.get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s-install.sh
    mode: "0700"
    owner: root
    group: root

# DISCLAIMER: for etcd cluster use this first: k3s server --cluster-init
- name: execute k3s-install.sh
  ansible.builtin.command: /tmp/k3s-install.sh
  environment:
    INSTALL_K3S_EXEC: "{{ k3s_role }}"
    INSTALL_K3S_SKIP_START: "true"
    INSTALL_K3S_SKIP_ENABLE: "true"
    INSTALL_K3S_SKIP_SELINUX_RPM: "true"
    INSTALL_K3S_VERSION: "v{{ k3s_components.k3s }}"
  notify:
    - restart k3s

# diff -Naru /usr/local/bin/k3s-killall.sh ./k3s-killall.sh > k3s-killall.patch
- name: patch k3s-killall.sh
  ansible.posix.patch:
    src: k3s-killall.patch
    dest: /usr/local/bin/k3s-killall.sh

- name: patch k3s-uninstall.sh
  ansible.posix.patch:
    src: k3s-uninstall.patch
    dest: /usr/local/bin/k3s-uninstall.sh
  when:
    - k3s_role == 'server'

- name: patch k3s-agent-uninstall.sh
  ansible.posix.patch:
    src: k3s-agent-uninstall.patch
    dest: /usr/local/bin/k3s-agent-uninstall.sh
  when:
    - k3s_role == 'agent'

- name: kubectl completion bash
  ansible.builtin.command: kubectl completion bash
  register: kubectl_completion
  changed_when: false

- name: add kubectl completion
  ansible.builtin.copy:
    content: "{{ kubectl_completion.stdout }}"
    dest: /etc/bash_completion.d/kubectl
    mode: "0644"
    owner: root
    group: root

- name: k3s completion bash
  ansible.builtin.command: k3s completion bash
  register: k3s_completion
  changed_when: false

- name: add k3s completion
  ansible.builtin.copy:
    content: "{{ k3s_completion.stdout }}"
    dest: /etc/bash_completion.d/k3s
    mode: "0644"
    owner: root
    group: root

- name: cleanup
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/k3s-install.sh
    - /usr/local/bin/k3s-killall.sh.orig
    - /usr/local/bin/k3s-uninstall.sh.orig
  notify:
    - reboot
