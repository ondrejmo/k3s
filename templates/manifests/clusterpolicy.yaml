{% raw %}
---

apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-argo-workflow-rbac

spec:
  rules:
    - name: add-serviceaccount
      match: &match
        any:
          - resources:
              kinds:
                - Namespace
      exclude: &exclude
        any:
          - resources:
              namespaces:
                - cert-manager
                - default
                - external-dns
                - kube-node-lease
                - kube-public
                - kube-system
                - kyverno-system
                - longhorn-system
                - monitoring-system
                - trivy-system
      generate:
        generateExisting: true
        synchronize: true
        apiVersion: v1
        kind: ServiceAccount
        name: workflow
        namespace: "{{request.object.metadata.name}}"

    - name: add-role
      match: *match
      exclude: *exclude
      generate:
        synchronize: true
        generateExisting: true
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        name: workflow
        namespace: "{{request.object.metadata.name}}"
        data:
          rules:
            # pod get/watch is used to identify the container IDs of the current pod
            # pod patch is used to annotate the step's outputs back to controller (e.g. artifact location)
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
                - watch
                - patch
            # logs get/watch are used to get the pods logs for script outputs, and for log archival
            - apiGroups:
                - ""
              resources:
                - pods/log
              verbs:
                - get
                - watch
            # allow usage of argo agent (http template)
            - apiGroups:
                - argoproj.io
              resources:
                - workflowtasksets
              verbs:
                - list
                - watch
            - apiGroups:
                - argoproj.io
              resources:
                - workflowtasksets/status
              verbs:
                - patch
            # https://argo-workflows.readthedocs.io/en/release-3.5/workflow-rbac/
            - apiGroups:
                - argoproj.io
              resources:
                - workflowtaskresults
              verbs:
                - create
                - patch

    - name: add-rolebinding
      match: *match
      exclude: *exclude
      generate:
        synchronize: true
        generateExisting: true
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        name: workflow
        namespace: "{{request.object.metadata.name}}"
        data:
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: Role
            name: workflow
          subjects:
            - kind: ServiceAccount
              name: workflow

---

apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-pod-defaults

spec:
  background: false
  rules:
    - name: add-ca-certificates
      match:
        any:
          - resources:
              kinds:
                - Pod
      preconditions:
        all:
          - key: "{{ request.operation || 'BACKGROUND' }}"
            operator: AnyIn
            value:
              - CREATE
              - UPDATE
      mutate:
        foreach:
          - list: request.object.spec.containers
            patchStrategicMerge:
              spec:
                containers:
                  - name: "{{ element.name }}"
                    volumeMounts:
                      - name: ca
                        mountPath: /etc/ssl/certs
                        readOnly: true
                volumes:
                  - name: ca
                    configMap:
                      name: trusted-ca-bundle

    - name: add-requests
      match:
        any:
          - resources:
              kinds:
                - Pod
      preconditions:
        any:
          - key: "{{ request.operation || 'BACKGROUND' }}"
            operator: AnyIn
            value:
              - CREATE
              - UPDATE
      mutate:
        foreach:
          - list: request.object.spec.containers[]
            patchStrategicMerge:
              spec:
                containers:
                  - (name): "{{ element.name }}"
                    resources:
                      requests:
                        +(memory): 128Mi
                        +(cpu): 100m

---

apiVersion: kyverno.io/v2beta1
kind: ClusterCleanupPolicy
metadata:
  name: delete-old-pods

spec:
  match:
    any:
      - resources:
          kinds:
            - Pod
  # exclude:
  #   any:
  #     - resources:
  #         namespaces:
  #           - kube-system
  conditions:
    all:
      - key: "{{ time_diff('{{target.metadata.creationTimestamp}}','{{ time_now_utc() }}') }}"
        operator: GreaterThan
        value: "168h0m0s"
  schedule: "0 */8  * * *"

{% endraw %}
