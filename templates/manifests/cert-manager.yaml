---

apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: cert-manager
  namespace: kube-system

spec:
  chart: https://%{KUBERNETES_API}%/static/charts/cert-manager-{{ k3s_components.cert_manager }}.tgz
  targetNamespace: cert-manager
  createNamespace: true
  # https://github.com/cert-manager/cert-manager/blob/master/deploy/charts/cert-manager/values.yaml
  valuesContent: |-
    fullnameOverride: cert-manager
    enableCertificateOwnerRef: true
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
    startupapicheck:
      enabled: false
    crds:
      enabled: true
    webhook:
      replicaCount: 1
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
    cainjector:
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
    prometheus:
      enabled: true
      servicemonitor:
        enabled: true

---

apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: trust-manager
  namespace: kube-system

spec:
  chart: https://%{KUBERNETES_API}%/static/charts/trust-manager-{{ k3s_components.trust_manager }}.tgz
  targetNamespace: cert-manager
  createNamespace: true
  # https://github.com/cert-manager/trust-manager/blob/main/deploy/charts/trust-manager/values.yaml
  valuesContent: |-
    app:
      metrics:
        service:
          enabled: true
          servicemonitor:
            enabled: true
    resources:
      requests:
        cpu: 5m
        memory: 32Mi
    crds:
      enabled: true
    # secretTargets:
    #   enabled: true
    #   authorizedSecrets:
    #     - ca-certificates

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cert-manager
  namespace: cert-manager

spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
  ingress:
    - from:
        - namespaceSelector: {}
      ports:
        - port: 9402
          protocol: TCP
        - port: 9403
          protocol: TCP

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cert-manager-webhook
  namespace: cert-manager

spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app.kubernetes.io/name: webhook
  ingress:
    - from:
        - namespaceSelector: {}
      ports:
        - port: 6080
          protocol: TCP
        - port: 10250
          protocol: TCP

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: trust-manager
  namespace: cert-manager

spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app.kubernetes.io/name: trust-manager
  ingress:
    - from:
        - namespaceSelector: {}
      ports:
        - port: 6443
          protocol: TCP

---

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned-ca

spec:
  selfSigned: {}

---

apiVersion: trust.cert-manager.io/v1alpha1
kind: Bundle
metadata:
  name: trusted-ca-bundle

spec:
  sources:
    - useDefaultCAs: true
{% if k3s_tls.internal.crt != "" and k3s_tls.internal.key != "" %}
    - secret:
        name: trusted-ca
        key: tls.crt
{% endif %}
  target:
    configMap:
      key: ca-certificates.crt

{% if k3s_tls.external.email != "" and k3s_tls.external.token != "" %}
---

apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-api-token
  namespace: cert-manager

type: Opaque
stringData:
  token: {{ k3s_tls.external.token }}

---

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-ca

spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: {{ k3s_tls.external.email }}
    privateKeySecretRef:
      name: cloudflare
    solvers:
      - dns01:
          cloudflare:
            email: {{ k3s_tls.external.email }}
            apiTokenSecretRef:
              name: cloudflare-api-token
              key: token
        selector:
          dnsZones:
          - "{{ k3s_tls.external.domain }}"
          - "*.{{ k3s_tls.external.domain }}"

{% endif %}
{% if k3s_tls.internal.crt != "" and k3s_tls.internal.key != "" %}
---

apiVersion: v1
kind: Secret
metadata:
  name: trusted-ca
  namespace: cert-manager

stringData:
  tls.crt: |
    {{ k3s_tls.internal.crt | indent(4) }}
  tls.key: |
    {{ k3s_tls.internal.key | indent(4) }}

---

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: trusted-ca

spec:
  ca:
    secretName: trusted-ca

{% endif %}
