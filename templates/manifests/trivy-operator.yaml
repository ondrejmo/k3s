---

apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: trivy-operator
  namespace: kube-system

spec:
  chart: https://%{KUBERNETES_API}%/static/charts/trivy-operator-{{ k3s_components.trivy_operator }}.tgz
  targetNamespace: policy-system
  createNamespace: true
  # https://github.com/aquasecurity/trivy-operator/blob/main/deploy/helm/values.yaml
  valuesContent: |-
    operator:
      metricsFindingsEnabled: true
      metricsVulnIdEnabled: true
      metricsExposedSecretInfo: true
      metricsConfigAuditInfo: true
      metricsRbacAssessmentInfo: true
      metricsInfraAssessmentInfo: true
      metricsImageInfo: true
      metricsClusterComplianceInfo: true
      scanJobsConcurrentLimit: 1
      webhookBroadcastURL: http://vector-events.monitoring-system.svc/trivy
      infraAssessmentScannerEnabled: true
      exposedSecretScannerEnabled: true
    trivy:
      useEmbeddedRegoPolicies: true
      useBuiltinRegoPolicies: true
      command: rootfs
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 1024Mi
    trivyOperator:
      skipResourceByLabels: trivy.io/skip
      scanJobPodTemplateContainerSecurityContext:
        allowPrivilegeEscalation: true # default is false
        capabilities:
          drop:
            - ALL
        privileged: true # default is false
        readOnlyRootFilesystem: true
        runAsUser: 0
    serviceMonitor:
      enabled: true
    resources:
      requests:
        cpu: 40m
        memory: 512Mi

---

apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: trivy
  namespace: policy-system

spec:
  endpointSelector: {}
  egress:
    - toCIDRSet:
        - cidr: 0.0.0.0/0
          except:
            - 10.0.0.0/8
            - 172.16.0.0/12
            - 192.168.0.0/16
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
    - toEndpoints:
        - matchLabels:
            k8s:app.kubernetes.io/name: vector-events
            k8s:io.kubernetes.pod.namespace: monitoring-system
      toPorts:
        - ports:
            - port: "80"
              protocol: TCP
    - toEntities:
        - kube-apiserver
  ingress: []
